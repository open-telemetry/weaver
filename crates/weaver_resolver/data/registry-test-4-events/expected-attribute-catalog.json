[
  {
    "name": "client.name",
    "type": "string",
    "brief": "The name of the client that reported the exception.\n",
    "examples": [
      "myclient"
    ],
    "requirement_level": "recommended"
  },
  {
    "name": "browser.brands",
    "type": "string[]",
    "brief": "Array of brand name and version separated by a space",
    "examples": [
      [
        " Not A;Brand 99",
        "Chromium 99",
        "Chrome 99"
      ]
    ],
    "requirement_level": "recommended",
    "note": "This value is intended to be taken from the [UA client hints API](https://wicg.github.io/ua-client-hints/#interface) (`navigator.userAgentData.brands`).\n"
  },
  {
    "name": "browser.platform",
    "type": "string",
    "brief": "The platform on which the browser is running",
    "examples": [
      "Windows",
      "macOS",
      "Android",
      "iOS",
      "Linux"
    ],
    "requirement_level": "recommended",
    "note": "This value is intended to be taken from the [UA client hints API](https://wicg.github.io/ua-client-hints/#interface) (`navigator.userAgentData.platform`). \n"
  },
  {
    "name": "browser.mobile",
    "type": "boolean",
    "brief": "A boolean that is true if the browser is running on a mobile device",
    "requirement_level": "recommended",
    "note": "This value is intended to be taken from the [UA client hints API](https://wicg.github.io/ua-client-hints/#interface) (`navigator.userAgentData.mobile`). If unavailable, this attribute SHOULD be left unset.\n"
  },
  {
    "name": "browser.language",
    "type": "string",
    "brief": "Preferred language of the user using the browser",
    "examples": [
      "en",
      "en-US",
      "en-AU",
      "fr",
      "fr-FR"
    ],
    "requirement_level": "recommended",
    "note": "This value is intended to be taken from the Navigator API `navigator.language`.\n"
  },
  {
    "name": "ios.state",
    "type": {
      "allow_custom_values": false,
      "members": [
        {
          "id": "active",
          "value": "active",
          "brief": "The app has become `active`. Associated with UIKit notification `applicationDidBecomeActive`.\n",
          "note": null,
          "stability": null,
          "deprecated": null
        },
        {
          "id": "inactive",
          "value": "inactive",
          "brief": "The app is now `inactive`. Associated with UIKit notification `applicationWillResignActive`.\n",
          "note": null,
          "stability": null,
          "deprecated": null
        },
        {
          "id": "background",
          "value": "background",
          "brief": "The app is now in the background. This value is associated with UIKit notification `applicationDidEnterBackground`.\n",
          "note": null,
          "stability": null,
          "deprecated": null
        },
        {
          "id": "foreground",
          "value": "foreground",
          "brief": "The app is now in the foreground. This value is associated with UIKit notification `applicationWillEnterForeground`.\n",
          "note": null,
          "stability": null,
          "deprecated": null
        },
        {
          "id": "terminate",
          "value": "terminate",
          "brief": "The app is about to terminate. Associated with UIKit notification `applicationWillTerminate`.\n",
          "note": null,
          "stability": null,
          "deprecated": null
        }
      ]
    },
    "brief": "This attribute represents the state the application has transitioned into at the occurrence of the event.\n",
    "requirement_level": "required",
    "note": "The iOS lifecycle states are defined in the [UIApplicationDelegate documentation](https://developer.apple.com/documentation/uikit/uiapplicationdelegate#1656902), and from which the `OS terminology` column values are derived.\n"
  },
  {
    "name": "android.state",
    "type": {
      "allow_custom_values": false,
      "members": [
        {
          "id": "created",
          "value": "created",
          "brief": "Any time before Activity.onResume() or, if the app has no Activity, Context.startService() has been called in the app for the first time.\n",
          "note": null,
          "stability": null,
          "deprecated": null
        },
        {
          "id": "background",
          "value": "background",
          "brief": "Any time after Activity.onPause() or, if the app has no Activity, Context.stopService() has been called when the app was in the foreground state.\n",
          "note": null,
          "stability": null,
          "deprecated": null
        },
        {
          "id": "foreground",
          "value": "foreground",
          "brief": "Any time after Activity.onResume() or, if the app has no Activity, Context.startService() has been called when the app was in either the created or background states.",
          "note": null,
          "stability": null,
          "deprecated": null
        }
      ]
    },
    "brief": "This attribute represents the state the application has transitioned into at the occurrence of the event.\n",
    "requirement_level": "required",
    "note": "The Android lifecycle states are defined in [Activity lifecycle callbacks](https://developer.android.com/guide/components/activities/activity-lifecycle#lc), and from which the `OS identifiers` are derived.\n"
  },
  {
    "name": "test_attr.platform",
    "type": "string",
    "brief": "The browser platform",
    "examples": [
      "Windows",
      "macOS",
      "Android"
    ],
    "requirement_level": "recommended",
    "note": "Test value.",
    "stability": "stable"
  },
  {
    "name": "test_attr.http.url",
    "type": "string",
    "brief": "The Url",
    "examples": [
      "https://example.com"
    ],
    "requirement_level": "recommended",
    "note": "Test url value.",
    "stability": "stable"
  },
  {
    "name": "test_attr.event.attr",
    "type": "string",
    "brief": "Just making sure the referenced attributes are defined",
    "examples": "some value",
    "requirement_level": "recommended",
    "note": "Test value.",
    "stability": "stable"
  },
  {
    "name": "test_attr.session.id",
    "type": "string",
    "brief": "The session id",
    "examples": "127836abcdef98",
    "requirement_level": "recommended",
    "note": "Test value.",
    "stability": "stable"
  },
  {
    "name": "client.address",
    "type": "string",
    "brief": "Test Client address ....",
    "examples": [
      "client.example.com",
      "10.1.2.80",
      "/tmp/my.sock"
    ],
    "requirement_level": "recommended",
    "note": "Test client address note\n",
    "stability": "stable"
  },
  {
    "name": "client.port",
    "type": "int",
    "brief": "Client port number.",
    "examples": [
      65123
    ],
    "requirement_level": "recommended",
    "note": "Test client port",
    "stability": "stable"
  },
  {
    "name": "exception.type",
    "type": "string",
    "brief": "The type of the exception (its fully-qualified class name, if applicable).\n",
    "examples": [
      "java.net.ConnectException",
      "OSError"
    ],
    "requirement_level": "recommended",
    "stability": "stable"
  },
  {
    "name": "exception.message",
    "type": "string",
    "brief": "The exception message.",
    "examples": [
      "Division by zero",
      "Can't convert 'int' object to str implicitly"
    ],
    "requirement_level": "recommended",
    "stability": "stable"
  },
  {
    "name": "exception.stacktrace",
    "type": "string",
    "brief": ".",
    "examples": "Exception in thread \"main\" java.lang.RuntimeException: Test exception\\n",
    "requirement_level": "recommended",
    "stability": "stable"
  },
  {
    "name": "exception.escaped",
    "type": "boolean",
    "brief": "SHOULD be set to true if the exception event is recorded at a point where it is known that the exception is escaping the scope of the span.\n",
    "requirement_level": "recommended",
    "stability": "stable"
  },
  {
    "name": "exception.type",
    "type": "string",
    "brief": "The type of the exception (its fully-qualified class name, if applicable).\n",
    "examples": [
      "java.net.ConnectException",
      "OSError"
    ],
    "requirement_level": {
      "conditionally_required": "Required if `exception.message` is not set, recommended otherwise."
    },
    "stability": "stable"
  },
  {
    "name": "exception.message",
    "type": "string",
    "brief": "The exception message.",
    "examples": [
      "Division by zero",
      "Can't convert 'int' object to str implicitly"
    ],
    "requirement_level": {
      "conditionally_required": "Required if `exception.type` is not set, recommended otherwise."
    },
    "stability": "stable"
  },
  {
    "name": "feature_flag.key",
    "type": "string",
    "brief": "The unique identifier of the feature flag.",
    "examples": [
      "logo-color"
    ],
    "requirement_level": "required"
  },
  {
    "name": "feature_flag.provider_name",
    "type": "string",
    "brief": "The name of the service provider that performs the flag evaluation.",
    "examples": [
      "Flag Manager"
    ],
    "requirement_level": "recommended"
  },
  {
    "name": "feature_flag.variant",
    "type": "string",
    "brief": "SHOULD be a semantic identifier for a value. If one is unavailable, a stringified version of the value can be used.\n",
    "examples": [
      "red",
      "true",
      "on"
    ],
    "requirement_level": "recommended",
    "note": "A semantic identifier, commonly referred to as a variant, provides a means\nfor referring to a value without including the value itself. This can\nprovide additional context for understanding the meaning behind a value.\nFor example, the variant `red` maybe be used for the value `#c05543`.\n\nA stringified version of the value can be used in situations where a\nsemantic identifier is unavailable. String representation of the value\nshould be determined by the implementer."
  },
  {
    "name": "test_attr.event.attr",
    "type": "string",
    "brief": "Just making sure the referenced attributes are defined",
    "examples": "some value",
    "requirement_level": {
      "conditionally_required": "if and only if corresponding event is enabled"
    },
    "note": "test attribute\n",
    "stability": "stable"
  },
  {
    "name": "test_attr.session.id",
    "type": "string",
    "brief": "The session id",
    "examples": "127836abcdef98",
    "requirement_level": {
      "conditionally_required": "if and only if corresponding event is enabled"
    },
    "note": "Another test attribute\n",
    "stability": "stable"
  }
]